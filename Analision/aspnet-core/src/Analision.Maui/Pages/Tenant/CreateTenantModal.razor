@using Analision.Maui.Services.Navigation
@inherits AnalisionMainLayoutPageComponentBase

@attribute [Route("/" + NavigationUrlConsts.Tenants_Create)]

<div class="container">
    <EditForm Model="CreateTenantModel" OnValidSubmit="@CreateTenantAsync">
        <DataAnnotationsValidator/>
        <div class="card">
            <div class="card-body">
                <div class="d-flex flex-column mb-4">
                    <label class="form-label fw-semibold">
                        <span class="required">
                            @L("TenancyName")
                        </span>
                    </label>
                    <InputText @bind-Value="CreateTenantModel.TenancyName" class="form-control form-control-solid" placeholder="@L("TenancyName")"/>
                    <ValidationMessage For="@(() => CreateTenantModel.TenancyName)"/>
                </div>
                <div class="d-flex flex-column mb-4">
                    <label class="form-label fw-semibold">
                        <span class="required">@L("Name")</span>
                    </label>
                    <InputText @bind-Value="CreateTenantModel.Name" class="form-control form-control-solid" placeholder="@L("Name")"/>
                    <ValidationMessage For="@(() => CreateTenantModel.Name)"/>
                </div>
                <div class="d-flex flex-column mb-4">
                    <label class="form-label fw-semibold">
                        <span class="required">@L("AdminEmailAddress")</span>
                    </label>
                    <InputText @bind-Value="CreateTenantModel.AdminEmailAddress" class="form-control form-control-solid" placeholder="@L("AdminEmailAddress")"/>
                    <ValidationMessage For="@(() => CreateTenantModel.AdminEmailAddress)"/>
                </div>
                <div class="form-check form-check-solid form-switch form-check-custom fv-row mb-4">
                    <InputCheckbox @bind-Value="CreateTenantModel.IsSetRandomPassword" class="form-check-input w-45px h-30px" type="checkbox" id="isSetRandomPassword"/>
                    <label class="form-check-label" for="isSetRandomPassword">@L("SetRandomPassword")</label>
                    <ValidationMessage For="@(() => CreateTenantModel.IsSetRandomPassword)"/>
                </div>

                @if (!CreateTenantModel.IsSetRandomPassword)
                {
                    <div class="d-flex flex-column mb-4">
                        <label class="form-label fw-semibold">
                            <span class="required">@L("AdminPassword")</span>
                        </label>
                        <InputText @bind-Value="CreateTenantModel.AdminPassword" type="password" class="form-control form-control-solid" placeholder="@L("AdminPassword")"/>
                        <ValidationMessage For="@(() => CreateTenantModel.AdminPassword)"/>
                    </div>
                    <div class="d-flex flex-column mb-4">
                        <label class="form-label fw-semibold">
                            <span class="required">@L("AdminPasswordRepeat")</span>
                        </label>
                        <InputText @bind-Value="CreateTenantModel.AdminPasswordRepeat" type="password" class="form-control form-control-solid" placeholder="@L("AdminPasswordRepeat")"/>
                        <ValidationMessage For="@(() => CreateTenantModel.AdminPasswordRepeat)"/>
                    </div>
                }

                <div class="form-check form-check-solid form-switch form-check-custom fv-row mb-4">
                    <InputCheckbox @bind-Value="CreateTenantModel.UseHostDatabase" class="form-check-input w-45px h-30px" id="useHostDatabase"/>
                    <label class="form-check-label" for="useHostDatabase">@L("UseHostDatabase")</label>
                    <ValidationMessage For="@(() => CreateTenantModel.UseHostDatabase)"/>
                </div>

                @if (!CreateTenantModel.UseHostDatabase)
                {
                    <div class="d-flex flex-column mb-4">
                        <label class="form-label fw-semibold">
                            <span class="required">@L("DatabaseConnectionString")</span>
                        </label>
                        <InputText @bind-Value="CreateTenantModel.ConnectionString" class="form-control form-control-solid" placeholder="@L("DatabaseConnectionString")"/>
                        <ValidationMessage For="@(() => CreateTenantModel.ConnectionString)"/>
                    </div>
                }

                <div class="form-check form-check-solid form-switch form-check-custom fv-row">
                    <InputCheckbox @bind-Value="CreateTenantModel.IsActive" class="form-check-input w-45px h-30px" type="checkbox" id="isActive"/>
                    <label class="form-check-label" for="isActive">@L("Active")</label>
                    <ValidationMessage For="@(() => CreateTenantModel.IsActive)"/>
                </div>
                <hr/>

                <div class="col-md-6 fv-row fv-plugins-icon-container" data-select2-id="select2-data-119-f5bj">
                    <label class="required fs-6 fw-semibold mb-2">@L("Edition")</label>
                    <InputSelect @bind-Value="CreateTenantModel.SelectedEdition" class="form-select form-select-solid" data-control="select2"
                                 data-hide-search="true" tabindex="-1" aria-hidden="true" data-kt-initialized="1">
                        @foreach (var edition in CreateTenantModel.Editions)
                        {
                            <option value="@edition.Value">@edition.DisplayText</option>
                        }
                    </InputSelect>
                </div>

                @if (CreateTenantModel.IsSubscriptionFieldVisible)
                {
                    <label class="form-check form-switch form-check-custom form-check-solid mt-2">
                        <InputCheckbox @bind-Value="CreateTenantModel.IsUnlimitedTimeSubscription" class="form-check-input"/>
                        <span class="form-check-label fw-semibold text-muted">@L("UnlimitedTimeSubscription")</span>
                        <ValidationMessage For="@(() => CreateTenantModel.IsUnlimitedTimeSubscription)"/>
                    </label>
                    @if (!CreateTenantModel.IsUnlimitedTimeSubscription)
                    {
                        <div class="d-flex flex-column mb-4">
                            <label class="form-label fw-semibold">
                                <span class="required">@L("SubscriptionEndDateUtc")</span>
                            </label>
                            <InputDate @bind-Value="CreateTenantModel.SubscriptionEndDateUtc" class="form-control form-control-solid datetimepicker-input"
                                       id="subscription-end-date-utc" data-toggle="datetimepicker" data-target="#subscription-end-date-utc"/>
                            <ValidationMessage For="@(() => CreateTenantModel.SubscriptionEndDateUtc)"/>
                        </div>
                    }

                    if (!CreateTenantModel.IsSelectedEditionFree)
                    {
                        <label class="form-check form-switch form-check-custom form-check-solid mt-2">
                            <InputCheckbox @bind-Value="CreateTenantModel.IsInTrialPeriod" class="form-check-input"/>
                            <span class="form-check-label fw-semibold text-muted">@L("IsInTrialPeriod")</span>
                            <ValidationMessage For="@(() => CreateTenantModel.IsInTrialPeriod)"/>
                        </label>
                    }
                }
            </div>
        </div>

        <div class="text-center mt-5">
            <button type="submit" class="btn btn-primary btn-lg w-50">
                <span class="indicator-label">@L("Save")</span>
            </button>
        </div>
    </EditForm>
</div>