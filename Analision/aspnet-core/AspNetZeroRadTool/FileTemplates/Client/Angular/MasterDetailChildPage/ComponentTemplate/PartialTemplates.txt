{
"propertyTemplates":[
		{
			"placeholder" : "{{Property_Filter_Def_Here}}",
			"condition" : "{{Property_Advanced_Filter_Here}} == true",
			"templates" : [
					{
					"type" : "enum",
					"content" : "    {{property_Name_Here}}Filter = -1;
"
					},
					{
					"type" : "numeric",
					"content" : "    max{{Property_Name_Here}}Filter : number;
		max{{Property_Name_Here}}FilterEmpty : number;
		min{{Property_Name_Here}}Filter : number;
		min{{Property_Name_Here}}FilterEmpty : number;
"
					},
					{
					"type" : "DateTime",
					"content" : "    max{{Property_Name_Here}}Filter : {{Get_Date_Here}};
		min{{Property_Name_Here}}Filter : {{Get_Date_Here}};
"
					},
					{
					"type" : "bool",
					"content" : "    {{property_Name_Here}}Filter = -1;
"
					},
					{
					"type" : "default",
					"content" : "    {{property_Name_Here}}Filter = '';
"
					}
				]
		},
		{
			"placeholder" : "{{Property_Filter_Param_Here}}",
			"condition" : "{{Property_Advanced_Filter_Here}} == true",
			"templates" : [
					{
					"type" : "numeric",
					"content" : "
            this.max{{Property_Name_Here}}Filter == null ? this.max{{Property_Name_Here}}FilterEmpty: this.max{{Property_Name_Here}}Filter,
            this.min{{Property_Name_Here}}Filter == null ? this.min{{Property_Name_Here}}FilterEmpty: this.min{{Property_Name_Here}}Filter,"
					},
					{
					"type" : "DateTime",
					"content" : "
            this.max{{Property_Name_Here}}Filter,
            this.min{{Property_Name_Here}}Filter,"
					},
					{
					"type" : "file",
					"content" : ""
					},
					{
					"type" : "default",
					"content" : "
            this.{{property_Name_Here}}Filter,"
					}
				]
		}
	],
"navigationPropertyTemplates":[
		{
			"placeholder" : "{{NP_Filter_Def_Here}}",
			"templates" : [
					{
					"relation" : "single",
					"content" : "        {{nP_Foreign_Entity_Name_Here}}{{NP_Display_Property_Name_Here}}{{NP_Duplication_Number_Here}}Filter = '';
"
					}
				]
		},
		{
			"placeholder" : "{{NP_Property_Filter_Param_Here}}",
			"templates" : [
					{
					"relation" : "single",
					"content" : "
            this.{{nP_Foreign_Entity_Name_Here}}{{NP_Display_Property_Name_Here}}{{NP_Duplication_Number_Here}}Filter,"
					}
				]
		},
        {
            "placeholder" : "{{NP_Fill_Null_For_Excel_Filter}}",
            "templates" : [
                    {
                    "relation" : "single",
                    "content" : "
                    undefined,
                    undefined,"
                    }
                ]
        }
	],
"enumTemplates":[
		{
			"placeholder" : "{{Enum_Import_Before_V060600_Here}}",
			"condition": "{{Project_Version_Here}} < 060600",
			"content" : ", {{Entity_Name_Here}}Dto{{Enum_Used_For_Property_Name_Here}}"
		},
		{
			"placeholder" : "{{Enum_Import_After_V060600_Here}}",
			"condition": "{{Project_Version_Here}} >= 060600",
			"content" : ", {{Enum_Name_Here}}"
		},
		{
			"placeholder" : "{{Enum_Def_Before_V060600_Here}}",
			"condition": "{{Project_Version_Here}} < 060600",
			"content" : "    {{enum_Name_Here}} = {{Entity_Name_Here}}Dto{{Enum_Used_For_Property_Name_Here}};
"
		},
		{
			"placeholder" : "{{Enum_Def_After_V060600_Here}}",
			"condition": "{{Project_Version_Here}} >= 060600",
			"content" : "    {{enum_Name_Here}} = {{Enum_Name_Here}};
"
		}
	],
"conditionalTemplates":[
		{
			"placeholder": "{{Standalone_Here}}",
			"condition": "{{Project_Version_Here}} >= 140000 && {{Project_Version_Here}} <= 140010",
			"content": ",
                            standalone: false"
		},
        {
            "placeholder": "{{Show_Excel_Column_Selection_Modal_Here}}",
            "condition": "{{Create_Excel_Export_Here}} == true && {{Project_Version_Here}} >= 130200",
            "content": "    showExcelColumnSelectionModal(){
                                this._{{entity_Name_Plural_Here}}ServiceProxy.get{{Entity_Name_Here}}ExcelColumnsToExcel().subscribe(result => {
                                    this.excelColumnSelectionModal.show(result);
                                });
                            }"
        },
        {
            "placeholder": "{{Get_Excel_Import_Method_Here}}",
            "condition": "{{Create_Excel_Import_Here}} == true",
            "content": "
                    uploadExcel(data: { files: File }): void {
                        const formData: FormData = new FormData();
                        const file = data.files[0];
                        formData.append('file', file, file.name);
                
                        this._httpClient
                            .post<any>(this.uploadUrl, formData)
                            .pipe(finalize(() => this.excelFileUpload.clear()))
                            .subscribe((response) => {
                                if (response.success) {
                                    this.notify.success(this.l('Import{{Entity_Name_Plural_Here}}ProcessStart'));
                                } else if (response.error != null) {
                                    this.notify.error(this.l('Import{{Entity_Name_Plural_Here}}UploadFailed'));
                                }
                            });
                    }
                
                    onUploadExcelError(): void {
                        this.notify.error(this.l('Import{{Entity_Name_Plural_Here}}UploadFailed'));
                    }
            "
        },
        {
            "placeholder": "{{Excel_Import_Imports_Here}}",
            "condition": "{{Create_Excel_Import_Here}} == true",
            "content": "
                    import { HttpClient } from '@angular/common/http';
                    import { FileUpload } from 'primeng/fileupload';
                    import { finalize } from 'rxjs';
            "
        },
        {
            "placeholder": "{{Excel_Import_Properties_Here}}",
            "condition": "{{Create_Excel_Import_Here}} == true",
            "content": "
                    uploadUrl: string;
            "
        },
        {
            "placeholder": "{{Excel_Import_ViewChild_Here}}",
            "condition": "{{Create_Excel_Import_Here}} == true",
            "content": "
                    @ViewChild('ExcelFileUpload', { static: false }) excelFileUpload: FileUpload;
            "
        },
        {
            "placeholder": "{{Excel_Import_Set_UploadUrl_Here}}",
            "condition": "{{Create_Excel_Import_Here}} == true",
            "content": "
                    this.uploadUrl = AppConsts.remoteServiceBaseUrl + '/{{Entity_Name_Plural_Here}}/ImportFromExcel';
            "
        },
        {
            "placeholder": "{{Excel_Column_Selection_ViewChild_Here}}",
            "condition": "{{Create_Excel_Export_Here}} == true && {{Project_Version_Here}} >= 130200",
            "content": "@ViewChild('excelColumnSelectionModal', { static: true }) excelColumnSelectionModal: ExcelColumnSelectionModalComponent;"
        },
        {
            "placeholder": "{{Excel_Column_Selection_Importing_Here}}",
            "condition": "{{Create_Excel_Export_Here}} == true && {{Project_Version_Here}} >= 130200",
            "content": "import { ExcelColumnSelectionModalComponent } from '@app/shared/common/excel-column-selection/excel-column-selection-modal';"
        },
        {
             "placeholder" : "{{Excel_Import_Constructor_Here}}",
             "condition": "{{Create_Excel_Import_Here}} == true",
             "content" : ",
             private _httpClient: HttpClient"
        },
		{
			"placeholder": "{{EntityHistory_Decs_Here}}",
			"condition": "{{Entity_History_Here}} == true",
			"content": "    _entityTypeFullName = '{{Namespace_Here}}.{{Namespace_Relative_Full_Here}}.{{Entity_Name_Here}}';
    entityHistoryEnabled = false;"
		},
		{
			"placeholder": "{{EntityTypeHistoryModalComponent_Import_Here}}",
			"condition": "{{Entity_History_Here}} == true",
			"content": "import { EntityTypeHistoryModalComponent } from '@app/shared/common/entityHistory/entity-type-history-modal.component';"
		},
        {
			"placeholder": "{{EntityTypeHistoryModalComponent_Here}}",
			"condition": "{{Entity_History_Here}} == true",
			"content": "EntityTypeHistoryModalComponent,"
		},
		{
			"placeholder": "{{Set_Entity_History_Enabled_Function_Here}}",
			"condition": "{{Entity_History_Here}} == true",
			"content": "
    private setIsEntityHistoryEnabled(): boolean {
        let customSettings = (abp as any).custom;
        return this.isGrantedAny('Pages.Administration.AuditLogs') && customSettings.EntityHistory && customSettings.EntityHistory.isEnabled && {{Use_Lodash_Filter_Here}}(customSettings.EntityHistory.enabledEntities, entityType => entityType === this._entityTypeFullName).length === 1;
    }
"
		},
        {
            "placeholder": "{{Implement_OnInit_Here}}",
            "condition": "{{Entity_History_Here}} == true",
            "content": " implements OnInit"
        },
        {
            "placeholder": "{{On_Init_Function_Here}}",
            "condition": "{{Entity_History_Here}} == true",
            "content": "
    ngOnInit(): void {
        {{Set_Entity_History_Enabled_Here}}
    }
"
        },
        {
            "placeholder": "{{Set_Entity_History_Enabled_Here}}",
            "condition": "{{Entity_History_Here}} == true",
            "content": "
            this.entityHistoryEnabled = this.setIsEntityHistoryEnabled();"
        },
		{
			"placeholder": "{{EntityTypeHistoryModal_Dev_Here}}",
			"condition": "{{Entity_History_Here}} == true",
			"content": "
    @ViewChild('entityTypeHistoryModal', { static: true }) entityTypeHistoryModal: EntityTypeHistoryModalComponent;"
		},
		{
			"placeholder": "{{EntityTypeHistoryModal_Open_Here}}",
			"condition": "{{Entity_History_Here}} == true",
			"content": "
    showHistory({{entity_Name_Here}}: {{Entity_Name_Here}}Dto): void {
        this.entityTypeHistoryModal.show({
            entityId: {{entity_Name_Here}}.id.toString(),
            entityTypeFullName: this._entityTypeFullName,
            entityTypeDescription: ''
        });
    }
"
		},
		{
			"placeholder": "{{View_Component_Import_Here}}",
			"condition": "{{Create_View_Only_Here}} == true && {{Is_Non_Modal_CRUD_Page}} == false",
			"content": "
import { {{Master_Detail_Child_Prefix_Here}}View{{Entity_Name_Here}}ModalComponent } from './{{master_Detail_Child_Prefix_Here}}view-{{entity_Name_Here}}-modal.component';"
		},		
		{
			"placeholder": "{{View_Component_Dec_Here}}",
			"condition": "{{Create_View_Only_Here}} == true",
			"content": "
    @ViewChild('view{{Entity_Name_Here}}ModalComponent', { static: true }) view{{Entity_Name_Here}}Modal: {{Master_Detail_Child_Prefix_Here}}View{{Entity_Name_Here}}ModalComponent;"
		},
		{
			"placeholder": "{{TurboTable_Import_Here}}",
			"condition": "{{Project_Version_Here}} >= 050400 && {{Project_Version_Here}} < 080500",
			"content": "import { Table } from 'primeng/components/table/table'"
		},
		{
			"placeholder": "{{TurboTable_Import_Here}}",
			"condition": "{{Project_Version_Here}} >= 080500",
			"content": "import { Table, TableModule } from 'primeng/table'"
		},
		{
			"placeholder": "{{DataTable_Import_Here}}",
			"condition": "{{Project_Version_Here}} < 050400",
			"content": "import { DataTable } from 'primeng/components/datatable/datatable'"
		},
		{
			"placeholder": "{{TruboTable_Primenghelper_Here}}",
			"condition": "{{Project_Version_Here}} >= 050400",
			"content": "primengTableHelper"
		},
		{
			"placeholder": "{{DataTable_Primenghelper_Here}}",
			"condition": "{{Project_Version_Here}} < 050400",
			"content": "primengDatatableHelper"
		},
		{
			"placeholder": "{{DataTable_Dec_Here}}",
			"condition": "{{Project_Version_Here}} < 050400",
			"content": "Data"
		},
        {
            "placeholder": "{{Get_Excel_Method_Here}}",
            "condition": "{{Create_Excel_Export_Here}} == true && {{Project_Version_Here}} >= 130200",
            "content": "
            
                exportToExcel($event): void {
                    this._{{entity_Name_Plural_Here}}ServiceProxy.get{{Entity_Name_Plural_Here}}ToExcel(
                    this.filterText, $event, {{Property_Filter_Param_Here}}undefined, this.{{master_Detail_Child_Base_Entity_Name_Here}}Id, {{NP_Fill_Null_For_Excel_Filter}}
                    )
                    .subscribe(result => {
                        this._fileDownloadService.downloadTempFile(result);
                     });
                }"
        },
		{
			"placeholder": "{{Get_Excel_Method_Here}}",
			"condition": "{{Create_Excel_Export_Here}} == true && {{Project_Version_Here}} < 130200",
			"content": "

    exportToExcel(): void {
        this._{{entity_Name_Plural_Here}}ServiceProxy.get{{Entity_Name_Plural_Here}}ToExcel(
        this.filterText, $event, {{Property_Filter_Param_Here}}undefined, this.{{master_Detail_Child_Base_Entity_Name_Here}}Id, {{NP_Fill_Null_For_Excel_Filter}}
        )
        .subscribe(result => {
            this._fileDownloadService.downloadTempFile(result);
         });
    }"
		},
		{
			"placeholder": "{{PrimeNG_Imports_Here}}",
			"condition": "{{Project_Version_Here}} < 080500",
			"content": "import { Paginator } from 'primeng/components/paginator/paginator';
import { LazyLoadEvent } from 'primeng/components/common/lazyloadevent';"
		},
		{
			"placeholder": "{{PrimeNG_Imports_Here}}",
			"condition": "{{Project_Version_Here}} >= 080500 && {{Project_Version_Here}} < 100000",
			"content": "import { Paginator } from 'primeng/paginator';
import { LazyLoadEvent } from 'primeng/public_api';"
		},
		{
			"placeholder": "{{PrimeNG_Imports_Here}}",
			"condition": "{{Project_Version_Here}} >= 100000",
			"content": "import { Paginator, PaginatorModule } from 'primeng/paginator';
import { LazyLoadEvent, PrimeTemplate } from 'primeng/api';"
		},
		{
			"placeholder": "{{Notify_Service_Here}}",
			"condition": "{{Project_Version_Here}} < 080500",
			"content": "import { NotifyService } from '@abp/notify/notify.service';"
		},
		{
			"placeholder": "{{Notify_Service_Here}}",
			"condition": "{{Project_Version_Here}} >= 080500",
			"content": "import { NotifyService } from 'abp-ng2-module';"
		},
		{
			"placeholder": "{{Import_Create_Or_Edit_Component_Here}}",
			"condition": "{{Is_Non_Modal_CRUD_Page}} == false",
			"content": "import { {{Master_Detail_Child_Prefix_Here}}CreateOrEdit{{Entity_Name_Here}}ModalComponent } from './{{master_Detail_Child_Prefix_Here}}create-or-edit-{{entity_Name_Here}}-modal.component';"
		},
		{
			"placeholder": "{{View_Child_Create_Or_Edit_Modal_Def_Here}}",
			"condition": "{{Is_Non_Modal_CRUD_Page}} == false",
			"content": "@ViewChild('createOrEdit{{Entity_Name_Here}}Modal', { static: true }) createOrEdit{{Entity_Name_Here}}Modal: {{Master_Detail_Child_Prefix_Here}}CreateOrEdit{{Entity_Name_Here}}ModalComponent;{{View_Component_Dec_Here}}"
		},
		{
			"placeholder": "{{On_Click_Create_Here}}",
			"condition": "{{Is_Non_Modal_CRUD_Page}} == false",
			"content": "this.createOrEdit{{Entity_Name_Here}}Modal.show(this.{{master_Detail_Child_Base_Entity_Name_Here}}Id);"
		},
		{
			"placeholder": "{{On_Click_Create_Here}}",
			"condition": "{{Is_Non_Modal_CRUD_Page}} == true",
			"content": "this._router.navigate(['/app/{{menu_Position_Here}}/{{namespace_Relative_Here}}/{{entity_Name_Plural_Here}}/createOrEdit']);"
		},
		{
			"placeholder": "{{Router_Field_Here}}",
			"condition": "{{Is_Non_Modal_CRUD_Page}} == true",
			"content": ",
			private _router: Router"
		},
		{
             "placeholder" : "{{Import_Lodash_Filter_Here}}",
             "condition": "{{Project_Version_Here}} < 100000",
             "content" : "import * as _ from 'lodash';"
        },
        {
             "placeholder" : "{{Import_Lodash_Filter_Here}}",
             "condition": "{{Project_Version_Here}} >= 100000",
             "content" : "import { filter as _filter } from 'lodash-es';"
        },
        {
             "placeholder" : "{{Use_Lodash_Filter_Here}}",
             "condition": "{{Project_Version_Here}} < 100000",
             "content" : "_.filter"
        },
        {
             "placeholder" : "{{Use_Lodash_Filter_Here}}",
             "condition": "{{Project_Version_Here}} >= 100000",
             "content" : "_filter"
        },
        {
             "placeholder" : "{{Import_Datetime_Here}}",
             "condition": "{{Project_Version_Here}} < 100000",
             "content" : "import * as moment from 'moment';"
        },
        {
             "placeholder" : "{{Import_Datetime_Here}}",
             "condition": "{{Project_Version_Here}} >= 100000",
             "content" : "import { DateTime } from 'luxon';"
        },
        {
             "placeholder" : "{{Import_DateTime_Service_Here}}",
             "condition": "{{Project_Version_Here}} >= 100000",
             "content" : "
             import { DateTimeService } from '@app/shared/common/timing/date-time.service';"
        },
        {
             "placeholder" : "{{Get_DateTime_Service_Here}}",
             "condition": "{{Project_Version_Here}} >= 100000",
             "content" : ",
             private _dateTimeService: DateTimeService"
        },
        {
             "placeholder" : "{{Get_Date_Here}}",
             "condition": "{{Project_Version_Here}} >= 100000",
             "content" : "DateTime"
        },
        {
             "placeholder" : "{{Get_Date_Here}}",
             "condition": "{{Project_Version_Here}} < 100000",
             "content" : "moment.Moment"
        },
        {
             "placeholder" : "{{Get_Download_Url_Here}}",
             "condition": "{{Has_File_Prop}} == true && {{Project_Version_Here}} >= 100300",
             "content" : "
                 getDownloadUrl(id: string): string {
                     return AppConsts.remoteServiceBaseUrl + '/File/DownloadBinaryFile?id=' + id;
                 }
             "
        },
        {
			"placeholder": "{{Is_Create_Or_Edit_Component_Here}}",
			"condition": "{{Is_Non_Modal_CRUD_Page}} == false",
			"content": "{{Master_Detail_Child_Prefix_Here}}CreateOrEdit{{Entity_Name_Here}}ModalComponent,"
		},
        {
			"placeholder": "{{Is_View_Component_Here}}",
			"condition": "{{Create_View_Only_Here}} == true",
			"content": "{{Master_Detail_Child_Prefix_Here}}View{{Entity_Name_Here}}ModalComponent,"
		},
        {
            "placeholder": "{{Excel_Column_Selection_Component_Here}}",
            "condition": "{{Create_Excel_Export_Here}} == true",
            "content": "ExcelColumnSelectionModalComponent,"
        },
        { 
			"placeholder": "{{Is_Non_Modal_Component_Here}}",
			"condition": "{{Is_Non_Modal_CRUD_Page}} == true",
			"content": "RouterLink,"
		},
		{
             "placeholder" : "{{Import_Standalone_Imports_Here}}",
             "condition": "{{Project_Version_Here}} >= 140100",
             "content" : "import { NgIf } from '@angular/common';
                import { FormsModule } from '@angular/forms';
                import { BusyIfDirective } from '@shared/utils/busy-if.directive';
                import { LocalizePipe } from '@shared/common/pipes/localize.pipe';
                import { PermissionPipe } from '@shared/common/pipes/permission.pipe';
				import { FileUploadModule } from 'primeng/fileupload';"
        },
        {
             "placeholder" : "{{Components_For_Standalone_Here}}",
             "condition": "{{Project_Version_Here}} >= 140100",
             "content" : "imports: [
                NgIf,
                FileUploadModule,
                LocalizePipe,
                PermissionPipe,
                FormsModule,
                TableModule,
                PrimeTemplate,
                BusyIfDirective,
                PaginatorModule,
                {{Is_Non_Modal_Component_Here}}
                {{Excel_Column_Selection_Component_Here}}
                {{Is_Create_Or_Edit_Component_Here}}
                {{Is_View_Component_Here}}
                {{EntityTypeHistoryModalComponent_Here}}
             ]"
        },
	]
}
